#map_type: voxel
#map_type: costmap


# robot_radius: 0.16  
footprint: [[0.23,0.19],[0.25,0],[0.23,-0.19],[-0.23, -0.19],[-0.23,0.19]]
recovery_behavior_enabled: true
#地图类型
#map_type: costmap

# controller_frequency: 5

obstacle_layer:
  enabled:              true
  combination_method:   1
  track_unknown_space:  false 
  origin_z: 0.0
  z_voxels: 20
  z_resolution: 0.1
  unknown_cost_value: 0
  unknown_threshold: 8
  mark_threshold: 0
  publish_voxel_map: false

  obstacle_range: 6.0         
  raytrace_range: 7.0        
  #footprint: [[-0.3,-0.4],[-0.3,1.03],[-0.0,1.03],[0.3, 1.03],[0.3,-0.4]]
  # robot_radius: 0.25  
  inflation_radius: 0.2
  #inf_is_valid: true
  max_obstacle_height: 0.40
  min_obstacle_height: 0.03
  controller_frequency: 5
  observation_sources: scan 
  #point_cloud_sensor
  #对传感器的坐标系和数据进行配置。这个也会用于代价地图添加和清除障碍物。例如，你可以用激光雷达传感器用于在代价地图添加障碍物，再添加kinect用于导航和清除障碍物。
  scan: {sensor_frame: base_link,  observation_persistence: 0.0, 
  max_obstacle_height: 0.3, min_obstacle_height: 0.05, data_type: LaserScan, topic: /scan, 
  marking: true,clearing: true}

inflation_layer:
 enabled:              true
#  cost_scaling_factor:  5.0   # exponential rate at which the obstacle cost drops off (default:10)
#  inflation_radius:     0.3  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
 enabled: true

